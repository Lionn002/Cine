import csv
import json
Cuentas = []
ruts = set()

def cargar_ruts_desde_csv():
    try:
        with open('cuentas.csv', 'r') as archivo_csv:
            lector_csv = csv.DictReader(archivo_csv)
            for fila in lector_csv:
                ruts.add(fila['rut'])
    except FileNotFoundError:
        print("El archivo 'cuentas.csv' no existe. Se creará uno nuevo.")

def rut_existe(rut):
    return rut in ruts

def validar_rut(rut):
    if len(rut) < 7 or len(rut) > 10:
        return False
    if not rut.isdigit():
        return False
    return True


def cuenta():
    cargar_ruts_desde_csv()  
    while True:
        print("Ingrese su cuenta de Cinepolis")
        print("1.- Si tengo una cuenta registrada con mi rut.")
        print("2.- Quiero crear una cuenta con mi rut.")
        print("3.- Salir.")
        submenu_rut = int(input("Ingrese una opción: "))
        if submenu_rut == 1:
            print("------------------------")
            while True:
                rut = input("Ingrese el RUT (No ingrese el -) (o escriba 'salir'): ")
                if rut.lower() == 'salir':
                    break
                if not validar_rut(rut):
                    print("Error: El RUT ingresado no es válido. Intente nuevamente.")
                    continue
                if not rut_existe(rut):
                    print("No tiene una cuenta creada, vaya a la opción 2.")
                    break
                nombre = input("Ingrese su nombre: ")
                Datos = {"rut": rut, "nombre": nombre}
                Cuentas.append(Datos)
                print(f"Conectado Exitosamente: {Datos}")
                break
        elif submenu_rut == 2:
            print("------------------------")
            while True:
                print("Si su rut termina con una k ingrese un 0")
                rut = input("Ingrese su rut (No ingrese el -) (o escriba 'salir'): ")
                if rut.lower() == 'salir':
                    break
                if not validar_rut(rut):
                    print("Error: El RUT ingresado no es válido. Intente nuevamente.")
                    continue
                if rut_existe(rut):
                    print("Error: El RUT ingresado ya existe. Ingrese un RUT diferente.")
                    continue
                nombre = input("Ingrese su nombre: ")
                Datos = {"rut": rut, "nombre": nombre}
                Cuentas.append(Datos)
                print(f"Cuenta creada exitosamente: {Datos}")
                ruts.add(rut)
                break
        elif submenu_rut == 3:
            print("Adios")
            break

cuenta()

with open('cuentas.csv', 'w', newline='') as archivo_csv:
    campo = ["rut", "nombre"]
    escritor_csv = csv.DictWriter(archivo_csv, fieldnames=campo)
    escritor_csv.writeheader()
    escritor_csv.writerows(Cuentas)

with open('cuentas.csv', 'r') as archivo_csv:
    lector_csv = csv.DictReader(archivo_csv)
    rut_csv = [fila for fila in lector_csv]

with open('cuentas.json', 'w') as archivo_json:
    json.dump(rut_csv, archivo_json, indent=2)
print("Los datos se han guardado en 'cuentas.csv' y 'cuentas.json'.")


import random as rd

def mapa_butacas(filas, columnas, prob_ocupado=0.25):
    butacas = []
    for i in range(filas):
        fila = []
        for j in range(columnas):
            if rd.random() < prob_ocupado:
                fila.append('X')
            else:
                fila.append('O')
        butacas.append(fila)
    return butacas

def mostrar_mapa(butacas):
    filas = len(butacas)
    columnas = len(butacas[0])
    
    encabezado = "  " + " ".join([str(i+1) for i in range(columnas)])
    print(encabezado)
    
    for i, fila in enumerate(butacas):
        print(chr(65 + i), " ".join(fila))

def seleccionar_butacas(butacas, cantidad):
    filas = len(butacas)
    columnas = len(butacas[0])
    seleccionadas = 0

    while seleccionadas < cantidad:
        mostrar_mapa(butacas)
        print(f"Seleccione la butaca {seleccionadas + 1} de {cantidad}:")
        
        while True:
            fila = input("Fila (A-G): ").upper()
            columna = input("Columna (1-7): ")
            if len(fila) == 1 and 'A' <= fila <= 'G' and columna.isdigit() and 1 <= int(columna) <= 7:
                columna = int(columna) - 1
                fila_num = ord(fila) - 65
                if butacas[fila_num][columna] == 'O':
                    butacas[fila_num][columna] = 'S'
                    seleccionadas += 1
                    break
                else:
                    print("Butaca ocupada. Seleccione otra.")
            else:
                print("Coordenadas fuera de rango para elegir. Intente nuevamente.")

    return butacas
